
/* 2nd Lecture notes on Arrays */

push() ===> this will add the array inside array (nested array) and this will create a problem

===> we can concat two arrays by using concat() method

 concat() ==> used to concat two or more arrays and returns new array
 

===> or by using spread operator

(...) operator ==> The spread operator in JavaScript (...) is used to spread elements from an iterable (like an array or object) into individual elements. It can be used in both arrays and objects, and it allows you to copy or merge them easily.

==> key Uses
Copying arrays or objects to avoid mutation.
Merging arrays or objects to combine multiple items.
Destructuring arrays or objects in a more readable and concise way.



const another_array = [1, 2, 3, [4, 5, 6], 7, [6, 7, [4, 5]]]

const real_another_array = another_array.flat(Infinity)  ==> output = [1,2,3,4,5,6,7,6,7,4,5]
 
flat() ==> In JavaScript, the flat() method is used to flatten an array, meaning it reduces the depth of nested arrays into a single array.

Syntax: array.flat(depth);
depth (optional): The depth level to flatten the array. The default value is 1, meaning the array is flattened one level deep. If you want to flatten the array completely (for example, if the array has multiple nested arrays), you can pass Infinity.



